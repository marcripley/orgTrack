{
  "name": "peanut",
  "version": "0.7.3",
  "description": "node.js cucumber implementation for the birds",
  "keywords": [
    "testing",
    "bdd",
    "tdd",
    "cucumber"
  ],
  "author": {
    "name": "Didit Tech",
    "email": "development@didit.com"
  },
  "dependencies": {
    "async": "0.1.9",
    "findit": "0.1.1",
    "nomnom": "0.6.1",
    "sinon": "1.1.1",
    "socket.io": "0.6.17",
    "stylus": "0.13.7",
    "underscore": "1.1.6",
    "xmlbuilder": "0.1.5"
  },
  "devDependencies": {
    "should": "*"
  },
  "bin": {
    "peanut": "./bin/peanut"
  },
  "engines": {
    "node": ">= 0.6.17"
  },
  "preferGlobal": true,
  "readme": "\n# peanut\n\n  node.js cucumber implementation for the birds\n\n  npm install peanut -g\n\n# quickstart\n\n#### 1: Describe behavior in plain text\n\n```cucumber\nFeature: Addition\n  In order to avoid silly mistakes\n  As a match idiot\n  I want to be told the sum of two numbers\n\n  Scenario: Add two numbers\n    Given I have entered 50 into the calculator\n    and I have entered 70 into the calculator\n    When I press add\n    Then the result should be 120 on the screen\n```\n\n#### 2: Run and get the template for a step definition file\npeanut features/example.feature\n\n```bash\nRunning features\n\n...\n\nSuccessful: 0\nFailed: 0\nPending: 0\nSkipped: 0\nUnimplemented: 3\n\nGiven(/^I have entered (\\d*\\.)?(\\d+) into the calculator$/, function(step, arg) {\n  step.pending();\n});\n\nWhen(/^I press add$/, function(step) {\n  step.pending();\n});\n\nThen(/^the result should be (\\d*\\.)?(\\d+) on the screen$/, function(step, arg) {\n  step.pending();\n});\n```\n\n#### 3: Write a step definition in Javascript\n\n```javascript\nvar assert = require('assert')\nvar calculator = require('../support/calculator')\n\nGiven(/^I have entered (\\d*\\.)?(\\d+) into the calculator$/, function(step, arg) {\n  calculator.push(parseInt(arg))\n  step.done()\n})\n\nWhen(/^I press add $/, function(step) {\n  step.pending()\n})\n\nThen(/^the result should be (\\d*\\.)?(\\d+) on the screen$/, function(step, arg) {\n  step.pending()\n})\n```\n\n#### 4: Run and watch it fail\npeanut features/example.feature\n\n```bash\nRunning features\n\nError: Cannot find module '../support/calculator'\n....\n```\n\n#### 5: Write code to make the test pass\n\n```javascript\nmodule.exports = (function() {\n  var args = []\n\n  return {\n    push: function(arg) {\n      args.push(arg)\n    }\n  }\n})()\n```\n\n#### 6: Run again and see the step pass\npeanut features/example.feature\n\n```bash\nRunning features\n\n....\n\nSuccessful: 2\nFailed: 0\nPending: 1\nSkipped: 1\nUnimplemented: 0\n```\n\n#### 7: Repeat 2 - 6 until green like a cuke\npeanut features/example.feature\n\n```bash\nRunning features\n\n....\n\nSuccessful: 4\nFailed: 0\nPending: 0\nSkipped: 0\nUnimplemented: 0\n```\n\n#### 8: Repeat 1 - 7 until the money runs out\n\n# run all tests\n\n    peanut\n\n# help\n\n    peanut -h\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2011 Didit &lt;developers@didit.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY \nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE \nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "Readme.md",
  "_id": "peanut@0.7.3",
  "_from": "peanut@0.7.x"
}
